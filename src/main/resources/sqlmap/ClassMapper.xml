<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjs.system.mapper.ClassMapper" >
  <resultMap id="BaseResultMap" type="com.hjs.system.model.Class" >
    <id column="cid" property="cid" jdbcType="INTEGER" />
    <result column="class_name" property="className" jdbcType="VARCHAR" />
    <!--<result column="tid" property="tid" jdbcType="INTEGER" />-->
    <!--<result column="course_id" property="courseId" jdbcType="INTEGER" />-->
    <result column="is_finished" property="isFinished" jdbcType="BIT" />
    <association property="teacher" column="tid" javaType="com.hjs.system.model.Teacher">
      <id column="tid" property="tid" jdbcType="INTEGER" />
      <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
      <result column="real_name" property="realName" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="BIT" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
      <result column="mobile" property="mobile" jdbcType="VARCHAR" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="picImg" property="picimg" jdbcType="VARCHAR" />
      <result column="remark" property="remark" jdbcType="VARCHAR" />
    </association>
    <association property="course" column="course_id" javaType="com.hjs.system.model.Course">
      <id column="cid" property="cid" jdbcType="INTEGER" />
      <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    cid, class_name, tid, course_id, is_finished
  </sql>

  <select id="findClassByCid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
    where c.cid = #{cid,jdbcType=INTEGER}
  </select>


  <select id="findClassByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
    where c.tid = #{tid,jdbcType=INTEGER}
  </select>


  <select id="findClassByTid2" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
    where c.tid = #{tid,jdbcType=INTEGER}
  </select>

  <select id="findClassByCourseId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
    where c.course_id = #{courseId,jdbcType=INTEGER}
  </select>


  <select id="findClassByIsFinished" resultMap="BaseResultMap" parameterType="java.lang.Boolean" >
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
    where c.is_finished = #{isFinished,jdbcType=BIT}
  </select>



  <select id="findAllClass" resultMap="BaseResultMap">
    select * from class c
    left join teacher t on c.tid = t.tid
    left join course co on c.course_id = co.cid
  </select>




  <select id="findClassByTeacherName" resultMap="BaseResultMap">
    select * from class c right join teacher t on c.tid = t.tid left join course co on c.course_id = co.cid
    where t.real_name like concat('%', #{name, jdbcType=VARCHAR}, '%')
  </select>




  <delete id="deleteClassByCid" parameterType="java.lang.Integer" >
    delete from class
    where cid = #{cid,jdbcType=INTEGER}
  </delete>


  <insert id="insertClass" parameterType="com.hjs.system.model.Class" useGeneratedKeys="true" keyColumn="cid" keyProperty="cid">
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        cid,
      </if>
      <if test="className != null" >
        class_name,
      </if>
      <if test="teacher.tid != null" >
        tid,
      </if>
      <if test="course.cid != null" >
        course_id,
      </if>
      <if test="isFinished != null" >
        is_finished,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="className != null" >
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="teacher.tid != null" >
        #{teacher.tid,jdbcType=INTEGER},
      </if>
      <if test="course.cid != null" >
        #{course.cid,jdbcType=INTEGER},
      </if>
      <if test="isFinished != null" >
        #{isFinished,jdbcType=BIT},
      </if>
    </trim>
  </insert>


  <update id="updateClass" parameterType="com.hjs.system.model.Class" >
    update class
    <set >
      <if test="className != null" >
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="teacher.tid != null" >
        tid = #{teacher.tid,jdbcType=INTEGER},
      </if>
      <if test="course.cid != null" >
        course_id = #{course.cid,jdbcType=INTEGER},
      </if>
      <if test="isFinished != null" >
        is_finished = #{isFinished,jdbcType=BIT},
      </if>
    </set>
    where cid = #{cid,jdbcType=INTEGER}
  </update>

</mapper>