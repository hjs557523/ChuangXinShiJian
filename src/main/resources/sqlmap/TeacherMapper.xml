<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjs.system.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.hjs.system.model.Teacher" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="picImg" property="picimg" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="github_name" property="githubName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    tid, teacher_id, real_name, password, sex, create_time, mobile, email, picImg, remark, github_name
  </sql>


  <select id="fuzzyQueryAllTeacher" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from teacher
    where teacher_id like concat('%', #{value, jdbcType=VARCHAR}, '%') or real_name like concat('%', #{value, jdbcType=VARCHAR}, '%')
  </select>


  <select id="findAllTeacher" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
  </select>

  <select id="findTeacherByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where tid = #{tid,jdbcType=INTEGER}
  </select>


  <select id="findTeacherByTeacherId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from teacher
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </select>



  <select id="findTeacherByGitHubName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from teacher
    where github_name = #{githubName,jdbcType=VARCHAR}
  </select>


  <delete id="deleteTeacherByTid" parameterType="java.lang.Integer" >
    delete from teacher
    where tid = #{tid,jdbcType=INTEGER}
  </delete>


  <insert id="insertTeacher" parameterType="com.hjs.system.model.Teacher" useGeneratedKeys="true" keyColumn="tid" keyProperty="tid">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="picimg != null" >
        picImg,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="githubName != null" >
        github_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picimg != null" >
        #{picimg,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="githubName != null" >
        #{githubName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <update id="updateProfile" parameterType="com.hjs.system.model.Teacher" >
    update teacher
    <set >
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="picimg != null" >
        picImg = #{picimg,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="githubName != null" >
        github_name = #{githubName,jdbcType=VARCHAR},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>


  <update id="updatePassword">
    update teacher
    <set>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>

</mapper>