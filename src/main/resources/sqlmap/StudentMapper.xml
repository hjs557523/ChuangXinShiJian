<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjs.system.mapper.StudentMapper" >



  <resultMap id="BaseResultMap" type="com.hjs.system.model.Student" >
    <id column="sid" property="sid" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pic_img" property="picImg" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="github_name" property="githubName" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
  </resultMap>



  <sql id="Base_Column_List" >
    sid, student_id, name, password, create_time, mobile, email, pic_img, class_id, github_name, open_id
  </sql>



  <select id="findStudentBySid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select <include refid="Base_Column_List"/> from student where sid = #{sid, jdbcType=INTEGER}
  </select>


  <select id="findStudentByGitHubName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List"/> from student where github_name = #{githubName, jdbcType=VARCHAR}
  </select>


  <select id="findAllStudent" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from student
  </select>


  <select id="fuzzyQueryAllStudent" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List"/> from student where student_id like concat('%', #{value, jdbcType=VARCHAR}, '%') or name like concat('%', #{value, jdbcType=VARCHAR}, '%')
  </select>

  <update id="updatePassword">
    update student
    <set>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>

  <update id="updateProfile" parameterType="com.hjs.system.model.Student" >
    update student
    <set>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="picImg != null" >
        pic_img = #{picImg,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="githubName != null" >
        github_name = #{githubName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
    </set>
    where sid = #{sid,jdbcType=INTEGER}
  </update>



  <delete id="deleteStudentBySid" parameterType="java.lang.Integer" >
    delete from student where sid = #{sid,jdbcType=INTEGER}
  </delete>



  <select id="findStudentByStudentId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select <include refid="Base_Column_List" /> from student where student_id = #{studentId,jdbcType=VARCHAR}
  </select>



  <insert id="insertStudent" parameterType="com.hjs.system.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        sid,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="picImg != null" >
        pic_img,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="githubName != null" >
        github_name,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picImg != null" >
        #{picImg,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="githubName != null" >
        #{githubName,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>



</mapper>