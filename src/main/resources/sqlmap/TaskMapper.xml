<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hjs.system.mapper.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.hjs.system.model.Task" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="INTEGER" />
    <!--<result column="sid" property="sid" jdbcType="INTEGER" />-->
    <result column="finished" property="finished" jdbcType="INTEGER" />
    <result column="issue_number" property="issueNumber" jdbcType="INTEGER" />

    <association property="student" column="stu_id" javaType="com.hjs.system.model.Student">
      <id column="sid" property="sid" jdbcType="INTEGER" />
      <result column="student_id" property="studentId" jdbcType="VARCHAR" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
      <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
      <result column="mobile" property="mobile" jdbcType="VARCHAR" />
      <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="pic_img" property="picImg" jdbcType="VARCHAR" />
      <result column="class_id" property="classId" jdbcType="INTEGER" />
      <result column="github_name" property="githubName" jdbcType="VARCHAR" />
      <result column="open_id" property="openId" jdbcType="VARCHAR" />
    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    tid, task_name, group_id, stu_id, finished, issue_number
  </sql>


  <select id="findAllTask" resultMap="BaseResultMap" >
    select * from task t left join student s on t.stu_id = s.sid
  </select>



  <select id="findAllTaskByGroupId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from task t left join student s on t.stu_id = s.sid
    where group_id = #{gid,jdbcType=INTEGER}
  </select>



  <select id="findAllTaskByStudentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from task t left join student s on t.stu_id = s.sid
    where stu_id = #{sid,jdbcType=INTEGER}
  </select>



  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from task t left join student s on t.stu_id = s.sid
    where tid = #{tid,jdbcType=INTEGER}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from task
    where tid = #{tid,jdbcType=INTEGER}
  </delete>


  <insert id="insertSelective" parameterType="com.hjs.system.model.Task" useGeneratedKeys="true" keyColumn="tid" keyProperty="tid">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="student.sid != null" >
        stu_id,
      </if>
      <if test="finished != null" >
        finished,
      </if>
      <if test="issueNumber != null" >
        issue_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="student.sid != null" >
        #{student.sid,jdbcType=INTEGER},
      </if>
      <if test="finished != null" >
        #{finished,jdbcType=INTEGER},
      </if>
      <if test="issueNumber != null" >
        #{issueNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.hjs.system.model.Task" >
    update task
    <set >
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="student.sid != null" >
        stu_id = #{student.sid,jdbcType=INTEGER},
      </if>
      <if test="finished != null" >
        finished = #{finished,jdbcType=INTEGER},
      </if>
      <if test="issueNumber != null" >
        issue_number = #{issueNumber,jdbcType=INTEGER},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>


</mapper>